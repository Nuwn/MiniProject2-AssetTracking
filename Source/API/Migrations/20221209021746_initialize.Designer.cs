// <auto-generated />
using System;
using API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20221209021746_initialize")]
    partial class initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataModels.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.HasIndex("OfficeId");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeviceId = 1,
                            OfficeId = 1,
                            Price = 1999.90m,
                            PurchaseDate = new DateTime(2022, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            DeviceId = 2,
                            OfficeId = 2,
                            Price = 3099.90m,
                            PurchaseDate = new DateTime(2021, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            DeviceId = 3,
                            OfficeId = 3,
                            Price = 5199.90m,
                            PurchaseDate = new DateTime(2022, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            DeviceId = 4,
                            OfficeId = 3,
                            Price = 999.90m,
                            PurchaseDate = new DateTime(2020, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DataModels.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Devices");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Device");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DataModels.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "JPY",
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = 2,
                            Currency = "NOK",
                            Name = "Oslo"
                        },
                        new
                        {
                            Id = 3,
                            Currency = "GBP",
                            Name = "London"
                        });
                });

            modelBuilder.Entity("DataModels.Computer", b =>
                {
                    b.HasBaseType("DataModels.Device");

                    b.HasDiscriminator().HasValue("Computer");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Brand = "ASUS",
                            Model = "5563"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Lenovo",
                            Model = "G56"
                        });
                });

            modelBuilder.Entity("DataModels.Mobile", b =>
                {
                    b.HasBaseType("DataModels.Device");

                    b.HasDiscriminator().HasValue("Mobile");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Samsung",
                            Model = "S12"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "IPhone",
                            Model = "11"
                        });
                });

            modelBuilder.Entity("DataModels.Asset", b =>
                {
                    b.HasOne("DataModels.Device", "Device")
                        .WithOne("Asset")
                        .HasForeignKey("DataModels.Asset", "DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModels.Office", "Office")
                        .WithMany("Assets")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Office");
                });

            modelBuilder.Entity("DataModels.Device", b =>
                {
                    b.Navigation("Asset");
                });

            modelBuilder.Entity("DataModels.Office", b =>
                {
                    b.Navigation("Assets");
                });
#pragma warning restore 612, 618
        }
    }
}
